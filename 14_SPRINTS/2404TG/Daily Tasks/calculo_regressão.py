# -*- coding: utf-8 -*-
"""Calculo_regressão.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MKsN_sTm0DWSZvewJI843x-X3dZ58vdd
"""

import statistics as st

#tempo_onibus
x= [90,60,45,80,60,50,150,30,105,105,30,50]

#tempo_metr/trem
y= [30,60,90,60,50,150,30,105,105,30,7,80]

#media
mea_x = st.mean(x)
media_y = st.mean(y)

st.variance=sum((x[i]-mea_x)**2 for i in range(len(x)))

print(st.variance)

st.covariance=sum((x[i]-mea_x) * (y[i]-media_y) for i in range(len(x)))

print(st.covariance)

#Coeficiente de Inclinação
b1= st.covariance/st.variance

#Coeficiente de intercepto
b0= media_y - b1*media_x

print(b0)

print(b1)

import statistics as st

x= [90,60,45,80,60,50,150,30,105,105,30,50]
y= [30,60,90,60,50,150,30,105,105,30,7,80]

#Função
def linear_regression(x,y):
  n= len(x)
  mean_x=st.mean(x)
  mean_y=st.mean(y)

  numerador=sum ((x[i]-mean_x) * (y[i]-mean_y) for i in range (len(n)))
  denominator=sum ((x[i]-mean_x) **2 for i in range (len(n)))

  b1=numerador / denominator
  b0=mean_y - b1*mean_x
  return b0, b1

  intercept, slope= linear_regression(x,y)
  print('O coeficiente de intercepto é (b0): ', intercept)
  print('O coeficiente de inclinação é (b1): ', slope)