# -*- coding: utf-8 -*-
"""estastistica.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uwHwhPluYqYWBy6hf2Jxy_7wZ9I9qQin
"""

import statistics as st

dados=[10,15,20,25,30,35,40,45,50,15]

media=statistics.mean #nao precisa escrever statistics por extenso, so por o apelido st

#media e o meio
media=st.mean(dados)
print(media)

#mediana pega o meio
mediana=st.median(dados)
print(mediana)

#moda pega os igual
moda=st.mode(dados)
print(moda)

import statistics as st
notas=[7.5,8.2,6,9.5,5.8,7.1,8.6,6.3,9,8.8]
media=st.median(notas)
print(media)

#desvio padrão = variancia do elemento que saiu fora da media, qual mais proximo ou afastado da media ele esta
desvio_padrao=st.stdev(notas)
print(f"Desvio Padrão: {desvio_padrao: .3f}")

#variancia
variancia=st.variance(notas)
print(variancia)

import statistics as st     # a correlacação são os elementos, quanto mais perto de 1 é 100% de verdade, 10 elementos
hora_estudo=[5,7,3,8,6,4,9,5,7,6]
notas=[75,85,60,90,80,70,95,75,85,80]

#correlação
correlacao=st.correlation(hora_estudo,notas)
print(correlacao)



"""atividade 1"""

import statistics as st

corridas=[10,13,20,25,30]
media=st.mean(corridas)
mediana = min(corridas)

print(media,'\n',mediana)

"""atividade 2"""

import statistics as st

tempo=[]
transportelist=[]

while True:
  temp=int(input('quanto tempo: '))

  if temp==0: #para sair do while e continuar com o codigo
    break

  transporte=str(input('digite o transporte:'))
  tempo.append(temp)
  transportelist.append(transporte)


media=st.mean(tempo)
mediana=st.median(tempo)
moda=st.mode(tempo)

print(tempo)
print(media, mediana, moda)

"""atividade 3"""

import statistics as st
consumo=[20, 25 ,30, 35, 40]
variancia=st.variance(consumo)
print(consumo)

#variancia
import statistics as st

x=[1,2,3,4,5]
y=[2,3,4,5,6]
media_x = st.mean(x)
media_y = st.mean(y)
variance = sum((x[i] - media_x)**2 for i in range(len(x)))
covariance = sum((x[i] - media_x)*(y[i] - media_y) for i in range(len(x)))

#coeficiente de inclinacao
b1=covariance/variance

#coeficiente de intercepto
b0=media_y-b1*media_x

print(b0)
print(b1)


#outro modo e com uma funcao
import statistics as st

x=[1,2,3,4,5]
y=[2,3,4,5,6]

def linear_renression(x,y):
  n=len(x)
  mean_x=st.mean(x)
  mean_y=st.mean(y)

  numerator=sum((x[i] - mean_x)*(y[i] - mean_y) for i in range(len(n)))
  denominator=sum((x[i] - mean_x)**2 for i in range(n))

  b1=numerator/denominator
  b0=mean_y-(b1*mean_x)
  return b0, b1

intercept,slope=linear_renression(x,y)
print('coeficiente de intercepto é (bo): ',intercept)
print('coeficiente de  inclinaçao é (b1): ',slope)

import statistics as st

carro=[]
moto=[]
onibus=[]
metro=[]
var_bus = 0
var_metro = 0
var_car = 0
var_moto = 0


while var_bus <= 3:
  bus=int(input('quanto tempo de onibus?: '))
  onibus.append(bus)
  var_bus=var_bus+1

while var_metro <= 3:
  metros=int(input('quanto tempo de metro?: '))
  metro.append(metros)
  var_metro=var_metro+1

while var_car <= 3:
  car=int(input('quanto tempo de carro?: '))
  carro.append(car)
  var_car=var_car+1

while var_moto <= 3:
  motoca=int(input('quanto tempo de moto?: '))
  moto.append(motoca)
  var_moto=var_moto+1

import statistics as st

media_bus =     st.mean(onibus)
media_metros =  st.mean(metro)
media_car =     st.mean(carro)
media_motoca =  st.mean(moto)

print('media de onibus:', media_bus)
print('media de metro:', media_metros)
print('media de carro:', media_car)
print('media de moto:', media_motoca)

def linear_regressao(x,y):
  n=len(x)
  mean_x=st.mean(x)
  mean_y=st.mean(y)

  variancia=sum((x[i] - mean_x)*(y[i] - mean_y) for i in range(n))      #variancia
  covariancia=sum((x[i] - mean_x)**2 for i in range(n))                 #covariancia

  b1=variancia/covariancia    #coeficiente de inclinaciao
  b0=mean_y-(b1*mean_x)       #coeficiente de intercepto
  return b0, b1

intercepto,incrinacao = linear_regressao(carro, moto)
print('coeficiente de intercepto é: ',intercepto)
print('coeficiente de  inclinaçao é: ',incrinacao)

intercepto,incrinacao = linear_regressao(onibus, metro)
print('coeficiente de intercepto é: ',intercepto)
print('coeficiente de  inclinaçao é: ',incrinacao)

